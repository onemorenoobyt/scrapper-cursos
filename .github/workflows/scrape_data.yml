# Contenido de .github/workflows/scrape_data.yml

# Dale un nombre a tu acci칩n para que la reconozcas en GitHub
name: Scrape Latest Course Data

# Define CU츼NDO se debe ejecutar esta acci칩n
on:
  # 1. De forma programada (usando formato cron)
  schedule:
    # Esto significa: "a los 0 minutos de la hora 6 UTC, todos los d칤as".
    # Es decir, a las 6 de la ma침ana UTC (7 u 8 AM en Espa침a, seg칰n el horario de verano).
    # Puedes cambiar '6' por la hora que prefieras.
    - cron: '0 6 * * *'
  
  # 2. De forma manual (muy 칰til para probar)
  workflow_dispatch:
    # Esto a침ade el bot칩n "Run workflow" en la pesta침a Actions.

# Define QU칄 trabajos se van a ejecutar
jobs:
  scrape:
    # El tipo de m치quina virtual que usar치 GitHub para ejecutar el c칩digo
    runs-on: ubuntu-latest

    # Los pasos que ejecutar치 la m치quina
    steps:
      # Paso 1: Descargar tu c칩digo desde el repositorio a la m치quina virtual
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Instalar Python en la m치quina virtual
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Paso 3: Instalar las librer칤as de tu fichero requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Paso 4: Ejecutar nuestro script principal
      - name: Run the scraper
        run: python main.py

      # Paso 5: Guardar los cambios (el CSV actualizado) en el repositorio
      - name: Commit and push if there are changes
        run: |
          # Configura el "usuario" que har치 el commit (es un bot)
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # A침ade el fichero CSV al 치rea de staging
          git add cursos_actualizados.csv
          
          # Este comando inteligente solo hace el commit si detecta cambios en el fichero.
          # Si no hay cursos nuevos o actualizados, no har치 nada.
          git diff --quiet && git diff --staged --quiet || (git commit -m "游늵 Actualizaci칩n autom치tica de datos de cursos" && git push)